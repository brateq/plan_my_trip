%script{:src => "//maps.google.com/maps/api/js?v=3.23&key=#{ENV['gmaps_api_token']}"}
%script{:src => "//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"}
%script{:src => "//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js", :type => "text/javascript"}
%p#notice= notice
= form_for :ta_url, url: import_attractions_path, method: :post do |f|
  = f.text_field :url
- if @attractions.any?
  %h1
    Listing Attractions (#{@attractions.count})
  = link_to "Reset map", reset_attractions_path, method: :post

  %br/

  %div{:style => "width: 800px;"}
    #map{:style => "width: 1250px; height: 600px;"}
  :javascript
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
      markers = handler.addMarkers(#{raw @hash.to_json});
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
    });
  = link_to 'Download attractions', attractions_path(format: 'csv')

  %table
    %thead
      %tr
        %th Name
        %th Stars
        %th Category
        %th Continent
        %td Country
        %td Region
        %td Province
        %td Municipality
        %td City
        %td Island Group
        %td Island
        %th Latitude
        %th Longitude
        %th{:colspan => "3"}
    %tbody
      - @attractions.each do |attraction|
        %tr
          %td= link_to attraction.name, attraction.link, :target => "_blank"
          %td= attraction.stars
          %td= attraction.category
          %td= attraction.continent
          %td= attraction.country
          %td= attraction.region
          %td= attraction.province
          %td= attraction.municipality
          %td= attraction.city
          %td= attraction.island_group
          %td= attraction.island
          %td= attraction.latitude
          %td= attraction.longitude
          %td= link_to 'Edit', edit_attraction_path(attraction)
          %td= link_to 'Destroy', attraction, method: :delete
